{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","completed","title","id","TodoList","todos","map","username","todosWithUsers","userId","usersFromServer","find","App","useState","selectedUser","setSelectedUser","setTitle","setTodos","isUserSelected","setIsUserSelected","isTitleProvided","setIsTitleProvided","isSent","setIsSent","action","method","onSubmit","event","preventDefault","prevTodos","newId","Math","max","foundUser","filter","newTodo","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c597b3f.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${completed && 'TodoInfo--completed'}`}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { FormEventHandler, useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [isUserSelected, setIsUserSelected] = useState(false);\n  const [isTitleProvided, setIsTitleProvided] = useState(false);\n  const [isSent, setIsSent] = useState(false);\n\n  const handleFormSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    setIsSent(true);\n\n    if (!title) {\n      setIsTitleProvided(false);\n\n      return;\n    }\n\n    if (!selectedUser) {\n      setIsUserSelected(false);\n\n      return;\n    }\n\n    setTodos(prevTodos => {\n      const newId = Math.max(...prevTodos.map(todo => todo.id)) + 1;\n      const foundUser = usersFromServer\n        .filter(user => user.name === selectedUser)[0];\n\n      const newTodo = {\n        id: newId,\n        userId: foundUser.id,\n        title,\n        completed: false,\n        user: foundUser,\n      };\n\n      return [...todos, newTodo];\n    });\n\n    setSelectedUser('');\n    setTitle('');\n  };\n\n  const handleTitleChange:\n  React.ChangeEventHandler<HTMLInputElement>\n  = (event) => {\n    setTitle(event.target.value);\n\n    setIsTitleProvided(true);\n  };\n\n  const handleSelectedUserChange:\n  React.ChangeEventHandler<HTMLSelectElement>\n  = (event) => {\n    setSelectedUser(event.target.value);\n\n    setIsUserSelected(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleFormSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {!isTitleProvided && isSent\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"selectUser\">User: </label>\n          <select\n            id=\"selectUser\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelectedUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option key={id} value={name}>{name}</option>);\n            })}\n          </select>\n\n          {!isUserSelected && isSent\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}